// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(EpsContext))]
    partial class EpsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entity.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartamentoResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("DepartamentoResidenciaId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("Domain.Entity.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("Domain.Entity.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdDimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Domain.Entity.Diagnostico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnfermedadId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamenId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("RecomendacionMedica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnfermedadId");

                    b.HasIndex("ExamenId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Diagnostico");
                });

            modelBuilder.Entity("Domain.Entity.Enfermedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gravedad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enfermedad");
                });

            modelBuilder.Entity("Domain.Entity.EnfermedadSintoma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnfermedadId")
                        .HasColumnType("int");

                    b.Property<int?>("SintomaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnfermedadId");

                    b.HasIndex("SintomaId");

                    b.ToTable("EnfermedadSintoma");
                });

            modelBuilder.Entity("Domain.Entity.EnfermedadTratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("enfermedadId")
                        .HasColumnType("int");

                    b.Property<int?>("tratamientoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("enfermedadId");

                    b.HasIndex("tratamientoId");

                    b.ToTable("EnfermedadTratamiento");
                });

            modelBuilder.Entity("Domain.Entity.Eps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Eps");
                });

            modelBuilder.Entity("Domain.Entity.Examen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Examen");
                });

            modelBuilder.Entity("Domain.Entity.ExamenDiagnostico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiagnosticoId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosticoId");

                    b.HasIndex("ExamenId");

                    b.ToTable("ExamenDiagnostico");
                });

            modelBuilder.Entity("Domain.Entity.HistorialCita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("HistorialCita");
                });

            modelBuilder.Entity("Domain.Entity.HistorialMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("HistorialMedico");
                });

            modelBuilder.Entity("Domain.Entity.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartamentoResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Especializacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoResidenciaId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Domain.Entity.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("IdDimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Domain.Entity.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartamentoResidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAfiliacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoResidenciaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Domain.Entity.Sintoma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnfermedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnfermedadId");

                    b.ToTable("Sintoma");
                });

            modelBuilder.Entity("Domain.Entity.Tratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnfermedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnfermedadId");

                    b.ToTable("Tratamiento");
                });

            modelBuilder.Entity("Domain.Entity.Administrador", b =>
                {
                    b.HasOne("Domain.Entity.Administrador", null)
                        .WithMany("personas")
                        .HasForeignKey("AdministradorId");

                    b.HasOne("Domain.Entity.Departamento", "DepartamentoResidencia")
                        .WithMany()
                        .HasForeignKey("DepartamentoResidenciaId");

                    b.HasOne("Domain.Entity.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");
                });

            modelBuilder.Entity("Domain.Entity.Cita", b =>
                {
                    b.HasOne("Domain.Entity.Medico", "Medico")
                        .WithMany("Citas")
                        .HasForeignKey("MedicoId");

                    b.HasOne("Domain.Entity.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Domain.Entity.Diagnostico", b =>
                {
                    b.HasOne("Domain.Entity.Enfermedad", "Enfermedad")
                        .WithMany()
                        .HasForeignKey("EnfermedadId");

                    b.HasOne("Domain.Entity.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("ExamenId");

                    b.HasOne("Domain.Entity.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("Domain.Entity.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");
                });

            modelBuilder.Entity("Domain.Entity.EnfermedadSintoma", b =>
                {
                    b.HasOne("Domain.Entity.Enfermedad", "Enfermedad")
                        .WithMany()
                        .HasForeignKey("EnfermedadId");

                    b.HasOne("Domain.Entity.Sintoma", "Sintoma")
                        .WithMany()
                        .HasForeignKey("SintomaId");
                });

            modelBuilder.Entity("Domain.Entity.EnfermedadTratamiento", b =>
                {
                    b.HasOne("Domain.Entity.Enfermedad", "enfermedad")
                        .WithMany()
                        .HasForeignKey("enfermedadId");

                    b.HasOne("Domain.Entity.Tratamiento", "tratamiento")
                        .WithMany()
                        .HasForeignKey("tratamientoId");
                });

            modelBuilder.Entity("Domain.Entity.ExamenDiagnostico", b =>
                {
                    b.HasOne("Domain.Entity.Diagnostico", "Diagnostico")
                        .WithMany()
                        .HasForeignKey("DiagnosticoId");

                    b.HasOne("Domain.Entity.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("ExamenId");
                });

            modelBuilder.Entity("Domain.Entity.Medico", b =>
                {
                    b.HasOne("Domain.Entity.Departamento", "DepartamentoResidencia")
                        .WithMany()
                        .HasForeignKey("DepartamentoResidenciaId");

                    b.HasOne("Domain.Entity.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");
                });

            modelBuilder.Entity("Domain.Entity.Municipio", b =>
                {
                    b.HasOne("Domain.Entity.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");
                });

            modelBuilder.Entity("Domain.Entity.Paciente", b =>
                {
                    b.HasOne("Domain.Entity.Departamento", "DepartamentoResidencia")
                        .WithMany()
                        .HasForeignKey("DepartamentoResidenciaId");

                    b.HasOne("Domain.Entity.Medico", "Medico")
                        .WithMany("Pacientes")
                        .HasForeignKey("MedicoId");

                    b.HasOne("Domain.Entity.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");
                });

            modelBuilder.Entity("Domain.Entity.Sintoma", b =>
                {
                    b.HasOne("Domain.Entity.Enfermedad", null)
                        .WithMany("Sintomas")
                        .HasForeignKey("EnfermedadId");
                });

            modelBuilder.Entity("Domain.Entity.Tratamiento", b =>
                {
                    b.HasOne("Domain.Entity.Enfermedad", null)
                        .WithMany("Tratamientos")
                        .HasForeignKey("EnfermedadId");
                });
#pragma warning restore 612, 618
        }
    }
}
